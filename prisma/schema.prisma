generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String  @id
  shopId        Int
  shop          Shop    @relation("ShopSession", fields: [shopId], references: [id])
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Shop {
  id          Int    @id @default(autoincrement())
  shop        String @unique
  accessToken String
  createdAt   DateTime @default(now())

  sessions    Session[]  @relation("ShopSession")
  rewards     reward[]   @relation("ShopReward")
  members     member[]   @relation("ShopMember")
}

model reward {
  id          Int     @id @default(autoincrement())
  shopId      Int
  shop        Shop    @relation("ShopReward", fields: [shopId], references: [id])
  title       String  
  discount    Float   
  discountType String?
  appliesTo   String?
  purchaseType String?
  products    Json?
  collections Json?
  minOrderAmount    Float   
  minOrderQuantity Float
  rewardType  RewardType 
  status      Boolean?  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model member {
  id         Int    @id @default(autoincrement())
  shopId     Int
  shop       Shop   @relation("ShopMember", fields: [shopId], references: [id])
  firstName  String?
  lastName   String?
  email      String? @unique
  status     Status? @default(PENDING)
  referralCode String? @unique @default(uuid())
  phoneNumber String?

  referred   Tracker[] @relation("Referrer")
  friends    Tracker[] @relation("Friend")
}

model Tracker {
  id          String @id @default(uuid())
  referrerId  Int?
  friendId    Int?
  discountCode String?
  createdAt   DateTime @default(now())

  referrer   member? @relation("Referrer", fields: [referrerId], references: [id])
  friend     member? @relation("Friend", fields: [friendId], references: [id])
}

enum RewardType {
  REFERRER
  FRIEND
}

enum Status {
  APPROVED
  PENDING
  REJECT
  DISABLE 
}